// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: KrxCjW4R1mRnYSwDviEVL
// Component: qLIFzKQ9P5v7O
import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: IyR48N57YI-_t/component

import { useScreenVariants as useScreenVariantss45AmOonXkMC } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: s45AMOonXk_mC/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_classy_agency_website.module.css"; // plasmic-import: KrxCjW4R1mRnYSwDviEVL/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: qLIFzKQ9P5v7O/css

import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: PIlqw5klUDN0S9/icon
import ArrowDownsvgIcon from "./icons/PlasmicIcon__ArrowDownsvg"; // plasmic-import: -eJkMEYtxGx56X/icon
import Icon21Icon from "./icons/PlasmicIcon__Icon21"; // plasmic-import: 9JSLIS2nG18X70/icon
import Icon8Icon from "./icons/PlasmicIcon__Icon8"; // plasmic-import: CgEwIvJca4A7zC/icon
import Icon18Icon from "./icons/PlasmicIcon__Icon18"; // plasmic-import: yxaikKgE5d3IYT/icon
import Icon22Icon from "./icons/PlasmicIcon__Icon22"; // plasmic-import: 69JTD1k1eh4ppH/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: LCpheNSdmJ6ZNI/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: POey8-IB7HbRG0/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: 3f54kDJ-vqAfJ6/icon
import Icon28Icon from "./icons/PlasmicIcon__Icon28"; // plasmic-import: UJqQ7dgmFnDEu-/icon
import image2OzwQvfKe3AOmjH from "./images/image2.png"; // plasmic-import: OZWQvfKe3AOmjH/picture
import pexelsTimMossholder1154739JpgXzfITm14KYLq from "./images/pexelsTimMossholder1154739Jpg.jpeg"; // plasmic-import: Xzf-iTm14K-YLq/picture
import pexelsSolomanSoh1492232JpgAruwJsekzLLu6 from "./images/pexelsSolomanSoh1492232Jpg.jpeg"; // plasmic-import: aruw-JsekzLLu6/picture

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  foreground2?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  span?: p.Flex<"span">;
  foreground?: p.Flex<"div">;
  foreground3?: p.Flex<"div">;
};

export interface DefaultHomepageProps {
  className?: string;
}

export const defaultHomepage__Args: Partial<PlasmicHomepage__ArgsType> = {};

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultHomepage__Args, props.args);
  const $props = args;
  const $ctx = ph.useDataEnv?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantss45AmOonXkMC()
  });

  return (
    <React.Fragment>
      {}
      {}

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__jAt9V)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__tuZf7)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__kmHza)}
              >
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__fi0Mm)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__bbvHu)}
                      displayHeight={"default" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"none" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"96px" as const}
                      src={{
                        src: image2OzwQvfKe3AOmjH,
                        fullWidth: 200,
                        fullHeight: 200,
                        aspectRatio: undefined
                      }}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__xvxHo)}
                    >
                      <p.Stack
                        as={"a"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__qE4Sv
                        )}
                      >
                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__si3Hm
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__siqs5
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "Services"
                            : "Services"}
                        </div>

                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__kel4Q
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>

                      <p.Stack
                        as={"a"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link___9Rwtt
                        )}
                      >
                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__upnCb
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__lXRaS
                          )}
                        >
                          {"Features"}
                        </div>

                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__gvB9W
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>

                      <p.Stack
                        as={"a"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__umBqw
                        )}
                      >
                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__cDqOn
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ulSzE
                          )}
                        >
                          {"work"}
                        </div>

                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__peNi0
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>

                      <p.Stack
                        as={"a"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__whOt
                        )}
                      >
                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__tqucv
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___3SLt
                          )}
                        >
                          {"Contact"}
                        </div>

                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__qd00N
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>

                      <p.Stack
                        as={"a"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__znhLc
                        )}
                      >
                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__zeM9K
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wZoD
                          )}
                        >
                          {"Company"}
                        </div>

                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__xRoGd
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>
                    </p.Stack>
                  </div>
                ) : null}
                {false ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox___5LvN8)}
                  >
                    <button
                      className={classNames(
                        projectcss.all,
                        projectcss.button,
                        projectcss.__wab_text,
                        sty.button__dAhJt
                      )}
                    >
                      {"Sign up"}
                    </button>

                    <p.Stack
                      as={"a"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__shypo
                      )}
                    >
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__mUmv)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___2MFt
                        )}
                      >
                        {"Log in"}
                      </div>

                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__iHnFr)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>
                  </div>
                ) : null}
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground2"}
              data-plasmic-override={overrides.foreground2}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground2)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___7Jpw0)}
                >
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"We help you craft "}</React.Fragment>
                      <span
                        data-plasmic-name={"span"}
                        data-plasmic-override={overrides.span}
                        className={classNames(
                          projectcss.all,
                          projectcss.span,
                          projectcss.__wab_text,
                          projectcss.plasmic_default__inline,
                          sty.span
                        )}
                      >
                        {"high-end"}
                      </span>
                      <React.Fragment>{" digital experiences."}</React.Fragment>
                    </React.Fragment>
                  </h1>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pM9Br
                    )}
                  >
                    {"BRAND | PRODUCT | DIGITAL"}
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__hVd4)}>
                  <ArrowDownsvgIcon
                    className={classNames(projectcss.all, sty.svg___29ABj)}
                    role={"img"}
                  />
                </div>
              ) : null}
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__wDx8V)}>
            <div className={classNames(projectcss.all, sty.freeBox__qP1N)}>
              <div className={classNames(projectcss.all, sty.freeBox__xagOm)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___33K5A
                  )}
                >
                  {"SERVICES"}
                </div>

                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__afj76
                  )}
                >
                  {"We help you stand out from the crowd."}
                </h2>

                <section
                  className={classNames(projectcss.all, sty.section__tbdqR)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"foreground"}
                    data-plasmic-override={overrides.foreground}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.foreground)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__f1CgT)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___4A5Zw
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__izGci
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ah91Y
                            )}
                          >
                            <Icon21Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__va0X
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__faLyP
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__q2Eze
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__vskxt
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__aZzzR
                              )}
                            >
                              {"BRAND"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__brzG5
                              )}
                            >
                              {
                                "Nulla odio mauris enim parturient adipiscing vestibulum inceptos."
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__xSIbl
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__so53D
                            )}
                          >
                            <Icon18Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__vqY2Y
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___4Bpkm
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__vXlX
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__tnfoH
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__iAw
                              )}
                            >
                              {"PRODUCT"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__eplqn
                              )}
                            >
                              {
                                "Consequat scelerisque a eros taciti nisl a sodales."
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__l9P6C
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__wfEak
                            )}
                          >
                            <Icon22Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__mMuKm
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__ubZsp
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__xXb6I
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__i1Gq0
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__pqYht
                              )}
                            >
                              {"DIGITAL"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__aMnQ
                              )}
                            >
                              {
                                "Varius ad malesuada ullamcorper cursus scelerisque a a."
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </section>
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__q46Vg)}>
            <div className={classNames(projectcss.all, sty.freeBox__mSqfh)}>
              <div className={classNames(projectcss.all, sty.freeBox__tLfXt)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vqU1H
                  )}
                >
                  {"WORK"}
                </div>

                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__iQpx3
                  )}
                >
                  {"Let our work speak for itself."}
                </h2>

                <section
                  className={classNames(projectcss.all, sty.section___592I)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"foreground3"}
                    data-plasmic-override={overrides.foreground3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.foreground3)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__cERwg)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__sswM
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__gSc8Z
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__gk2Tv
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__hJkl1)}
                              displayHeight={"auto" as const}
                              displayMaxHeight={"none" as const}
                              displayMaxWidth={"100%" as const}
                              displayMinHeight={"0" as const}
                              displayMinWidth={"0" as const}
                              displayWidth={"auto" as const}
                              loading={"lazy" as const}
                              src={{
                                src: pexelsTimMossholder1154739JpgXzfITm14KYLq,
                                fullWidth: 1920,
                                fullHeight: 1280,
                                aspectRatio: undefined
                              }}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__sryT
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___1WulE
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___73H7N
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__oz2I
                              )}
                            >
                              {"Heading main Lorem"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__yEbpf
                              )}
                            >
                              {
                                "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the "
                              }
                            </div>

                            {true ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__aVx8J
                                )}
                              >
                                <Button color={"softYellow" as const}>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__eenMu
                                    )}
                                  >
                                    {"Read More"}
                                  </div>
                                </Button>
                              </div>
                            ) : null}
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__qjXtS
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__sM6Et
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img___9NgL7)}
                              displayHeight={"auto" as const}
                              displayMaxHeight={"none" as const}
                              displayMaxWidth={"100%" as const}
                              displayMinHeight={"0" as const}
                              displayMinWidth={"0" as const}
                              displayWidth={"auto" as const}
                              loading={"lazy" as const}
                              src={{
                                src: pexelsSolomanSoh1492232JpgAruwJsekzLLu6,
                                fullWidth: 4000,
                                fullHeight: 2667,
                                aspectRatio: undefined
                              }}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___6VplD
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__nvQaE
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__rVtfm
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3___4VTnq
                              )}
                            >
                              {"Heading main Lorem"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__g89Dg
                              )}
                            >
                              {
                                "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the "
                              }
                            </div>

                            {true ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__tCYtf
                                )}
                              >
                                <Button color={"softYellow" as const}>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___7VkEv
                                    )}
                                  >
                                    {"Read More"}
                                  </div>
                                </Button>
                              </div>
                            ) : null}
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </section>
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox___8HC7K)}>
            <div className={classNames(projectcss.all, sty.freeBox__akkb)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__msDi9
                )}
              >
                {"CLIENTS"}
              </div>

              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2___59IC
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Our Client brands"
                  : "We've been lucky to work with some great companies."}
              </h2>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___3UVug)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__faLYl)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={
                    "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-loom.svg" as const
                  }
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__tH9ON)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={
                    "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-strapi.svg" as const
                  }
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__v6MzJ)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={
                    "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-segment.svg" as const
                  }
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__nmkps)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={
                    "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-xstate.svg" as const
                  }
                />
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__yrtE8)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__pvBe1)}
                  displayHeight={"96px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"96px" as const}
                  src={
                    "https://www.caa.com/sites/default/files/styles/headshot_500x500/public/speaker-headshots/Morgan_CAAspeakers_Heashot_Web.jpg?itok=WCOhQ1Hj" as const
                  }
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bdVL
                  )}
                >
                  {
                    "Lorem Ipsum is simply dummy text of the printing and typesetting industry. "
                  }
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__uPcxp
                  )}
                >
                  {"Lorem, TGS"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fguRv
                  )}
                >
                  {"Company name lorem"}
                </div>
              </p.Stack>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__zt5Pr)}>
            <div className={classNames(projectcss.all, sty.freeBox__vVpVn)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__gBu9)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__zItBt)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__veXr5)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"66px" as const}
                    src={{
                      src: image2OzwQvfKe3AOmjH,
                      fullWidth: 200,
                      fullHeight: 200,
                      aspectRatio: undefined
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__rvQlt)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qiiMm
                      )}
                    >
                      {"Connect with us"}
                    </div>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__aHb3A)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__qzTgb)}
                        role={"img"}
                      />

                      <Icon2Icon
                        className={classNames(projectcss.all, sty.svg__ho9Ig)}
                        role={"img"}
                      />

                      <Icon28Icon
                        className={classNames(projectcss.all, sty.svg__k23Ke)}
                        role={"img"}
                      />
                    </p.Stack>
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___9HT9A)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__b1S3T
                    )}
                  >
                    {"Navigation"}
                  </h3>

                  <p.Stack
                    as={"a"}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__z9OvH
                    )}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__eHssr)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xkdUi
                      )}
                    >
                      {"Nav link"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__hVhOp)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={"a"}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__fOq9V
                    )}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__slJj)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wNMmD
                      )}
                    >
                      {"Nav link"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__b5Y4J)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={"a"}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__b2N1I
                    )}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg___4X8Zw)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xymWh
                      )}
                    >
                      {"Nav link"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__hsqJv)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__vWbay)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__ye0FK
                    )}
                  >
                    {"Support"}
                  </h3>

                  <p.Stack
                    as={"a"}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__jZpi
                    )}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__w4CwN)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nCDhq
                      )}
                    >
                      {"Link"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__kkTt2)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={"a"}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__siMqd
                    )}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__aIazY)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___97LZm
                      )}
                    >
                      {"FAQs"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg___3MzG)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={"a"}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__feoN
                    )}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__izmxm)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nyEg9
                      )}
                    >
                      {"Status"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__yrcf9)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={"a"}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___3Wygo
                    )}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__m5Gio)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aga0H
                      )}
                    >
                      {"Link"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__khv8P)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__bZIsU)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3___4IFpk
                    )}
                  >
                    {"Address"}
                  </h3>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oCeYw
                    )}
                  >
                    {"1223 Lorem state22\n1234 XYA VARE"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__v6A5S
                    )}
                  >
                    {"Phone:  214141414114"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5NwIw
                    )}
                  >
                    {"Email:  Info@gmail.com"}
                  </div>
                </p.Stack>
              </p.Stack>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vGc3Y
                )}
              >
                <React.Fragment>
                  <React.Fragment>
                    {"© Company. All rights reserved. Site proudly built with "}
                  </React.Fragment>
                  <a
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      projectcss.plasmic_default__inline,
                      sty.link__y1Fg4
                    )}
                  >
                    {"Plasmic"}
                  </a>
                  <React.Fragment>{"."}</React.Fragment>
                </React.Fragment>
              </div>
            </div>
          </div>
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "foreground2", "h1", "span", "foreground", "foreground3"],
  foreground2: ["foreground2", "h1", "span"],
  h1: ["h1", "span"],
  span: ["span"],
  foreground: ["foreground"],
  foreground3: ["foreground3"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  foreground2: "div";
  h1: "h1";
  span: "span";
  foreground: "div";
  foreground3: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    foreground2: makeNodeComponent("foreground2"),
    h1: makeNodeComponent("h1"),
    span: makeNodeComponent("span"),
    foreground: makeNodeComponent("foreground"),
    foreground3: makeNodeComponent("foreground3"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
